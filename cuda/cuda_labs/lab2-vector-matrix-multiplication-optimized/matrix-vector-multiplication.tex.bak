\documentclass[12.0pt]{article}
\usepackage{graphics, graphicx, cite, fancybox, setspace}
\usepackage{amsfonts, amssymb, amsmath, latexsym, epic, eepic, url}
\usepackage{algorithm}
\usepackage{algorithmic}
\usepackage[letterpaper, left=1in, right=1in, top=1in, bottom=1in]{geometry}

\begin{document}

\title{ECEC-413: Introduction to Parallel Computer Architecture \\
CUDA Programming Assignment 1}
\author{Prof. Naga Kandasamy, ECE Department, Drexel University}
\maketitle %
\date{}

\noindent The lab is due on November 19, 2011. You may work on the problems in teams of up to two people.
\vspace{12pt}

\noindent \textbf{Matrix-Vector Multiplication.} You will multiply a dense $n \times n $ matrix $A$ with an $n \times 1$ vector $x$ to yield the $n \times 1$ result vector $y$. The serial algorithm is shown below. \vspace{12pt}

\begin{algorithm}[!h]
\begin{algorithmic}[1]
	\STATE \textbf{procedure} VEC\_MAT\_MULT($A$, $x$, $y$)
    \STATE int $i$, $j$;
	\FOR{$i$ := 0 to $n-1$}
        \STATE $y[i] := 0$;
		\FOR{$j$ := 0 to $n-1$}
				\STATE $y[i] := y[i] + A[i, j] \times x[j]$;
			\ENDFOR
	\ENDFOR
\end{algorithmic}
\end{algorithm}

\noindent Edit the \texttt{vec\_mat\_mult\_on\_device()} function in \texttt{vec\_mat\_mult.cu} and the \texttt{vec\_mat\_mult\_kernel()} function in \texttt{vec\_mat\_mult\_kernel.cu} to complete the functionality of the vector-matrix multiplication on the GPU. Do not change the source code elsewhere (except for adding timing-related code). The size of the matrix is guaranteed to be $4096 \times 4096$ and the size of the vector will be $4096 \times 1$. The CUDA source files for this question are available on webCT as a zip file.

Your program should accept no arguments. The application will create a randomly initialized matrix and a vector to multiply. After the GPU-based multiplication kernel is invoked, it will then compute the correct solution using the CPU and compare that solution with the GPU-computed solution. If the solutions match within a certain tolerance, the application will print out ``Test PASSED'' to the screen before exiting. \vspace{12pt}

\noindent E-mail me all of the files needed to run your code as a single zip file called \texttt{lab1.zip}. \vspace{12pt}

\noindent This question will be graded on the following parameters:
\begin{itemize}
\item \emph{Correctness}: 50 points. Use GPU global memory to get your code working.

\item \emph{Report}: 30 points. A two/three page report describing how you designed your kernel (use code or pseudocode to clarify the discussion) and the amount of speedup obtained over the serial version.

\item \emph{Theory}: 20 points. The GTX 275 GPU can achieve a peak processing rate of about 933 GFLOPs. The memory bandwidth on the device is 141.7 Gb/s. How many floating-point operations must be performed per load operation to achieve the peak processing rate? What is the performance of your kernel, in terms of GFLOPs?
\end{itemize}
\pagebreak

\end{document}
